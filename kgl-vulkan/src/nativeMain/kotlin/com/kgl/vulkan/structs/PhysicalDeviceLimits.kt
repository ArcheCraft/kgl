/**
 * Copyright [2019] [Dominic Fischer]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.kgl.vulkan.structs

import com.kgl.vulkan.enums.SampleCount
import com.kgl.vulkan.utils.toBoolean
import cvulkan.VkPhysicalDeviceLimits
import kotlinx.cinterop.get

fun PhysicalDeviceLimits.Companion.from(ptr: VkPhysicalDeviceLimits): PhysicalDeviceLimits =
		PhysicalDeviceLimits(
				ptr.maxImageDimension1D,
				ptr.maxImageDimension2D,
				ptr.maxImageDimension3D,
				ptr.maxImageDimensionCube,
				ptr.maxImageArrayLayers,
				ptr.maxTexelBufferElements,
				ptr.maxUniformBufferRange,
				ptr.maxStorageBufferRange,
				ptr.maxPushConstantsSize,
				ptr.maxMemoryAllocationCount,
				ptr.maxSamplerAllocationCount,
				ptr.bufferImageGranularity,
				ptr.sparseAddressSpaceSize,
				ptr.maxBoundDescriptorSets,
				ptr.maxPerStageDescriptorSamplers,
				ptr.maxPerStageDescriptorUniformBuffers,
				ptr.maxPerStageDescriptorStorageBuffers,
				ptr.maxPerStageDescriptorSampledImages,
				ptr.maxPerStageDescriptorStorageImages,
				ptr.maxPerStageDescriptorInputAttachments,
				ptr.maxPerStageResources,
				ptr.maxDescriptorSetSamplers,
				ptr.maxDescriptorSetUniformBuffers,
				ptr.maxDescriptorSetUniformBuffersDynamic,
				ptr.maxDescriptorSetStorageBuffers,
				ptr.maxDescriptorSetStorageBuffersDynamic,
				ptr.maxDescriptorSetSampledImages,
				ptr.maxDescriptorSetStorageImages,
				ptr.maxDescriptorSetInputAttachments,
				ptr.maxVertexInputAttributes,
				ptr.maxVertexInputBindings,
				ptr.maxVertexInputAttributeOffset,
				ptr.maxVertexInputBindingStride,
				ptr.maxVertexOutputComponents,
				ptr.maxTessellationGenerationLevel,
				ptr.maxTessellationPatchSize,
				ptr.maxTessellationControlPerVertexInputComponents,
				ptr.maxTessellationControlPerVertexOutputComponents,
				ptr.maxTessellationControlPerPatchOutputComponents,
				ptr.maxTessellationControlTotalOutputComponents,
				ptr.maxTessellationEvaluationInputComponents,
				ptr.maxTessellationEvaluationOutputComponents,
				ptr.maxGeometryShaderInvocations,
				ptr.maxGeometryInputComponents,
				ptr.maxGeometryOutputComponents,
				ptr.maxGeometryOutputVertices,
				ptr.maxGeometryTotalOutputComponents,
				ptr.maxFragmentInputComponents,
				ptr.maxFragmentOutputAttachments,
				ptr.maxFragmentDualSrcAttachments,
				ptr.maxFragmentCombinedOutputResources,
				ptr.maxComputeSharedMemorySize,
				ptr.maxComputeWorkGroupCount.let { target -> UIntArray(3) { target[it] } },
				ptr.maxComputeWorkGroupInvocations,
				ptr.maxComputeWorkGroupSize.let { target -> UIntArray(3) { target[it] } },
				ptr.subPixelPrecisionBits,
				ptr.subTexelPrecisionBits,
				ptr.mipmapPrecisionBits,
				ptr.maxDrawIndexedIndexValue,
				ptr.maxDrawIndirectCount,
				ptr.maxSamplerLodBias,
				ptr.maxSamplerAnisotropy,
				ptr.maxViewports,
				ptr.maxViewportDimensions.let { target -> UIntArray(2) { target[it] } },
				ptr.viewportBoundsRange.let { target -> FloatArray(2) { target[it] } },
				ptr.viewportSubPixelBits,
				ptr.minMemoryMapAlignment,
				ptr.minTexelBufferOffsetAlignment,
				ptr.minUniformBufferOffsetAlignment,
				ptr.minStorageBufferOffsetAlignment,
				ptr.minTexelOffset,
				ptr.maxTexelOffset,
				ptr.minTexelGatherOffset,
				ptr.maxTexelGatherOffset,
				ptr.minInterpolationOffset,
				ptr.maxInterpolationOffset,
				ptr.subPixelInterpolationOffsetBits,
				ptr.maxFramebufferWidth,
				ptr.maxFramebufferHeight,
				ptr.maxFramebufferLayers,
				SampleCount.fromMultiple(ptr.framebufferColorSampleCounts),
				SampleCount.fromMultiple(ptr.framebufferDepthSampleCounts),
				SampleCount.fromMultiple(ptr.framebufferStencilSampleCounts),
				SampleCount.fromMultiple(ptr.framebufferNoAttachmentsSampleCounts),
				ptr.maxColorAttachments,
				SampleCount.fromMultiple(ptr.sampledImageColorSampleCounts),
				SampleCount.fromMultiple(ptr.sampledImageIntegerSampleCounts),
				SampleCount.fromMultiple(ptr.sampledImageDepthSampleCounts),
				SampleCount.fromMultiple(ptr.sampledImageStencilSampleCounts),
				SampleCount.fromMultiple(ptr.storageImageSampleCounts),
				ptr.maxSampleMaskWords,
				ptr.timestampComputeAndGraphics.toBoolean(),
				ptr.timestampPeriod,
				ptr.maxClipDistances,
				ptr.maxCullDistances,
				ptr.maxCombinedClipAndCullDistances,
				ptr.discreteQueuePriorities,
				ptr.pointSizeRange.let { target -> FloatArray(2) { target[it] } },
				ptr.lineWidthRange.let { target -> FloatArray(2) { target[it] } },
				ptr.pointSizeGranularity,
				ptr.lineWidthGranularity,
				ptr.strictLines.toBoolean(),
				ptr.standardSampleLocations.toBoolean(),
				ptr.optimalBufferCopyOffsetAlignment,
				ptr.optimalBufferCopyRowPitchAlignment,
				ptr.nonCoherentAtomSize
		)
