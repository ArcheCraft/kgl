/**
 * Copyright [2019] [Dominic Fischer]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.kgl.vulkan.enums

import com.kgl.vulkan.utils.VkEnum
import cvulkan.*

actual enum class DebugReportObjectTypeEXT(override val value: VkDebugReportObjectTypeEXT) : VkEnum<DebugReportObjectTypeEXT> {
	UNKNOWN(VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT),

	SAMPLER_YCBCR_CONVERSION_EXT(VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT),

	DESCRIPTOR_UPDATE_TEMPLATE_EXT(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT),

	ACCELERATION_STRUCTURE_NV_EXT(VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT),

	INSTANCE(VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT),

	PHYSICAL_DEVICE(VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT),

	DEVICE(VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT),

	QUEUE(VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT),

	SEMAPHORE(VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT),

	COMMAND_BUFFER(VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT),

	FENCE(VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT),

	DEVICE_MEMORY(VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT),

	BUFFER(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT),

	IMAGE(VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT),

	EVENT(VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT),

	QUERY_POOL(VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT),

	BUFFER_VIEW(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT),

	IMAGE_VIEW(VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT),

	SHADER_MODULE(VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT),

	PIPELINE_CACHE(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT),

	PIPELINE_LAYOUT(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT),

	RENDER_PASS(VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT),

	PIPELINE(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT),

	DESCRIPTOR_SET_LAYOUT(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT),

	SAMPLER(VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT),

	DESCRIPTOR_POOL(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT),

	DESCRIPTOR_SET(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT),

	FRAMEBUFFER(VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT),

	COMMAND_POOL(VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT),

	SURFACE_KHR(VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT),

	SWAPCHAIN_KHR(VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT),

	DEBUG_REPORT_CALLBACK_EXT(VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT),

	DISPLAY_KHR(VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT),

	DISPLAY_MODE_KHR(VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT),

	OBJECT_TABLE_NVX(VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT),

	INDIRECT_COMMANDS_LAYOUT_NVX(VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT),

	VALIDATION_CACHE_EXT(VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT);

	companion object {
		private val enumLookUpMap: Map<UInt, DebugReportObjectTypeEXT> =
				enumValues<DebugReportObjectTypeEXT>().associateBy({ it.value })

		fun from(value: VkDebugReportObjectTypeEXT): DebugReportObjectTypeEXT =
				enumLookUpMap[value]!!
	}
}

